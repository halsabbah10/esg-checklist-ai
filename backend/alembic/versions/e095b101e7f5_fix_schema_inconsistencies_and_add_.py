"""Fix schema inconsistencies and add missing tables

Revision ID: e095b101e7f5
Revises: a001_initial_migration
Create Date: 2025-07-07 19:20:11.741934

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'e095b101e7f5'
down_revision: Union[str, None] = 'a001_initial_migration'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Fix comment table: rename comment_text to text
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.alter_column('comment_text', new_column_name='text')
    
    # Add missing fields to submission table
    op.add_column('submission', sa.Column('reviewer_notes', sa.Text(), nullable=True))
    op.add_column('submission', sa.Column('completion_percentage', sa.Float(), nullable=False))
    
    # Use batch mode for SQLite compatibility - fix user email index
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index('ix_user_email')
        batch_op.create_unique_constraint('uq_user_email', ['email'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Revert user email index changes
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint('uq_user_email', type_='unique')
        batch_op.create_index('ix_user_email', ['email'], unique=1)
    
    # Remove added submission fields
    op.drop_column('submission', 'completion_percentage')
    op.drop_column('submission', 'reviewer_notes')
    
    # Revert comment table: rename text back to comment_text
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.alter_column('text', new_column_name='comment_text')
    # ### end Alembic commands ###
