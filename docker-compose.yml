version: '3.8'

services:
  esg-checklist-ai:
    build: .
    container_name: esg-checklist-ai-backend
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
    env_file:
      - backend/.env
    volumes:
      - ./uploads:/app/uploads
      - ./exports:/app/exports
      - ./logs:/app/logs
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - esg-network
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  db:
    image: mysql:8.0
    container_name: esg-checklist-ai-db
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-secure_root_password}
      - MYSQL_DATABASE=${MYSQL_DB:-esg_ai}
      - MYSQL_USER=${MYSQL_USER:-esguser}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-esgusertest}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - esg-network
    security_opt:
      - no-new-privileges:true

  nginx:
    image: nginx:alpine
    container_name: esg-checklist-ai-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - esg-checklist-ai
    restart: unless-stopped
    networks:
      - esg-network
    security_opt:
      - no-new-privileges:true

volumes:
  mysql_data:
    driver: local

networks:
  esg-network:
    driver: bridge
